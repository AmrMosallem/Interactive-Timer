body {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100dvh;
  font-family: Arial, Helvetica, sans-serif;
  font-size: 18px;
  background-color: rgb(21, 19, 32);
  margin: 0;
}
body *::selection {
  background-color: rgb(153, 128, 255);
  color: rgb(35, 17, 78);
}
.timer-container {
  display: flex;
  flex-direction: column;
  align-items: center;
  background: rgb(35, 17, 78);
  color: rgb(153, 128, 255);
  gap: 20px;
  padding: 30px;
  border-radius: 10px;
  position: relative;
}
.timer {
  display: grid;
  /* The grid-template-columns property is used to define the number and 
     size of columns in a grid layout. The repeat() function is used 
     here to create three columns of equal width. The 1fr value is a 
     fractional unit that means the column will take up 1 part of the 
     available space. */
  grid-template-columns: 1fr 1fr 1fr;
  place-items: center;
  column-gap: 35px;
  /* color: rgb(41, 37, 71); */
  font-weight: bold;
}
.timer input {
  width: 70px;
  height: 50px;
  text-align: center;
  border: none;
  border-radius: 10px;
  font-size: 42px;
  background: none;
  color: rgb(255, 193, 254);
  outline: none;
  font-weight: bold;
}
.timer input:disabled {
  cursor: default;
}
.buttons {
  display: flex;
  align-items: center;
  gap: 20px;
}
.buttons button {
  font-size: 20px;
  font-weight: bold;
  padding: 13px 5px;
  width: 120px;
  border-radius: 10px;
  background: none;
  color: rgb(185, 127, 233);
  border: 2px solid rgb(185, 127, 233);
  cursor: pointer;

  transition: 0.3s;
}
.buttons button:hover {
  background: rgb(185, 127, 233);
  color: rgb(35, 17, 78);
}
/* Additional Styles*/
@property --angle {
  syntax: "<angle>";
  initial-value: 0deg;
  inherits: false;
}

.timer-container .border,
.timer-container .blurred-border {
  --angle: 0deg;

  position: absolute;
  width: 100%;
  height: 100%;
  top: 50%;
  left: 50%;
  translate: -50% -50%;

  background-image: conic-gradient(
    from var(--angle),
    #ff00e1,
    #3700ff,
    #ff00e1
  );

  padding: 3px;
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
}
.timer-container .blurred-border,
.timer-container .blurred-time-up {
  filter: blur(10px);
  animation: inherit;
}
.timer-container .time-up,
.timer-container .blurred-time-up {
  position: absolute;
  width: 100%;
  height: 100%;
  top: 50%;
  left: 50%;
  translate: -50% -50%;
  background: limegreen;
  padding: 3px;
  border-radius: inherit;
  z-index: -1;
  opacity: 0;
}

@keyframes spin {
  from {
    --angle: 0deg;
  }
  to {
    --angle: 360deg;
  }
}
@keyframes appear {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes disappear {
  from {
    opacity: 1;
  }
  to {
    opacity: 0;
  }
}
@keyframes timeUp {
  0% {
    opacity: 0;
  }
  50% {
    opacity: 1;
  }

  100% {
    opacity: 0;
  }
}

/* Chrome, Safari, Edge, Opera */
input[type="number"]::-webkit-outer-spin-button,
input[type="number"]::-webkit-inner-spin-button {
  transition: 0.2s;
  margin: 0;
}

/* Firefox */
input[type="number"] {
  -moz-appearance: textfield;
}
